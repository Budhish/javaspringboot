pipeline {
    agent any
    options {
        timestamps() // Add this line to enable timestamps in console output
    }
    environment {
        // Define AWS ECR variabless
        AWS_ACCOUNT_ID = '381491906321'   
        AWS_REGION = 'ap-south-1' 
        ECR_REPOSITORY = 'ruler-dev'
        IMAGE_TAG = '1.1.1'    //image version
        IMAGE_NAME = 'rs-flip-home'
    }
    stages {
        stage('Cleanup Workspace') { 
            steps {
                deleteDir() // Deletes the workspace
            }
        }

        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'git-credentials-java', url: 'https://github.com/Budhish/javaspringboot.git']])
            }
        }

        stage('Code Build') {
            steps {
                sh """
                mvn install
                """
            }
        }

        stage('Docker Build') {
            steps {
                sh """
                docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                """
            }
        }

        stage('Push to ECR') {
            steps {
                script {
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws-cred-mum', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        // Authenticate Docker to the ECR registry
                        sh """
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
                        """

                        // Tag the Docker image
                        sh """
                        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
                        """

                        // Push the Docker image to ECR
                        sh """
                        docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}
                        """
                    }
                }
            }
            post {
                success {
                    echo 'CI pipeline got succeeded!'
                }
                failure {
                    echo 'CI pipeline failed..'
                }
            }
        }
    }
}
